version: '3'

services:
  spi_db:
    container_name: spi_db
    restart: always
    image: mariadb
    env_file:
      - .env
      - .secret.env
      - .prod.env
    command: --innodb-buffer-pool-size=${MYSQL_BUFFER_POOL_SIZE} --skip-name-resolve
  spi_api:
    container_name: spi_api
    restart: always
    image: stickypi/spi_api:latest
    build:
      context: ./api
    depends_on:
      - spi_db
    expose:
      - ${API_PORT}
    env_file:
      - .env
      - .secret.env
      - .prod.env

  spi_webapp:
    container_name: spi_webapp
    restart: always
    image: stickypi/spi_webapp:latest
    build:
      context: ./webapp
    ports:
      - ${WEBAPP_PORT}:80
    env_file:
      - .env
      - .secret.env
      - .prod.env
    depends_on:
      - spi_api
#
#  spi_uid:
#    container_name: spi_uid
#    restart: always
#    image: stickypi/spi_ml:latest
#    build:
#      context: ./ml
#    command: 'python uid.py -v predict'
#    environment:
#      - BUNDLE_ROOT_DIR=/opt/ml_bundle_dir/ # - ${LOCAL_VOLUME_ROOT}/client/ml/
#      - LOCAL_CLIENT_DIR=/opt/api_api_client/ #${LOCAL_VOLUME_ROOT}/client/

#    depends_on:
#      - spi_api
#    env_file:
#      - .env
#      - .secret.env

  spi_nginx:
    container_name: spi_nginx
    restart: always
    image: stickypi/spi_nginx:latest
    build:
      context: ./nginx
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - "80:80"
    env_file:
      - .env
      - .prod.env
      - .secret.env
    depends_on:
      - spi_api
      - spi_webapp
      - spi_s3

  spi_s3:
    container_name: spi_s3
    image: stickypi/spi_s3:latest
    build:
      context: ./s3
    ports:
      - ${S3_PORT}:4566
      #- '8055:80'
    environment:
      - SERVICES=s3
      - DEBUG=1


    env_file:
      - .env
      - .prod.env
    volumes:
      - '${TMPDIR:-/tmp/localstack}:/tmp'
      - '/var/run/docker.sock:/var/run/docker.sock'
