MYSQL_HOST=spi_db
MYSQL_DATABASE=sticky-pi
MYSQL_USER=sticky-pi
MYSQL_RANDOM_ROOT_PASSWORD=yes

API_PORT=8080
API_ADMIN_NAME=admin

DEBUG=FALSE
DEVEL=FALSE
TESTING=FALSE

#DEBUG=1

#S3_HOST=s3
#S3_HOST=s3
#S3_ACCESS_KEY=
#S3_PRIVATE_KEY=
#S3_BUCKET_NAME=
#
#
## secret variables

#MYSQL_HOST=db
#MYSQL_RANDOM_ROOT_PASSWORD=yes
#MYSQL_DATABASE=sticky_pi
#MYSQL_USER=sticky_pi
#MYSQL_API_USER=api
#MYSQL_READER=sticky_pi_select
#MYSQL_SERVER_HOST=db
## MYSQL_PASSWORD= !!! SEE .secret.env !!!
## MYSQL_API_PASSWORD=!!! SEE .secret.env !!!
## MYSQL_READER_PASSWORD=!!! SEE .secret.env !!!
#
#DB_WRITER_HOST=db-writer
#DB_WRITER_PORT=5000
#DB_VOLUME=/opt/sticky_pi_mysql_volume
#
#API_HOST=api
#API_PORT=8082
#
## API_ADMIN_PASSWORD=!!! SEE .secret.env !!!
## API_SECRET_KEY=!!! SEE .secret.env !!!
#
#SHINY_HOST=rshiny
#SHINY_PORT=8093
#
## directly log into the server, with the user above (can prototype without reloging everytime)
#STICKY_PI_TESTING_RSHINY_AUTOLOGIN=FALSE
#
## log in without password preferably with the mock api then (otherwise no data can be access)
#STICKY_PI_TESTING_RSHINY_BYPASS_LOGGIN=FALSE
#
## Instead of using the API, a mock is used so can prototype without the other docker services
#STICKY_PI_TESTING_RSHINY_USE_MOCK_API=FALSE
#
#
## S3BUCKET_PRIVATE_KEY=!!! SEE .secret.env !!!
## S3BUCKET_ACCESS_KEY=!!! SEE .secret.env !!!
#FLASK_ENV=production
#S3BUCKET_NAME=sticky-pi-images
## S3BUCKET_ENDPOINT_URL=!!! SEE .secret.env !!!
#EXTRA_ENV=.prod.env
#
#PROFILE=dev
#CONTAINERS_AMOUNT=10